server:
  port: ${PORT:5003} 

logging:
  file:
    path: "logs"
    name: "logs/client.log"

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
    logfile:
      external-file: "logs/client.log"

spring:
  boot:
    admin:
      client:
        url: ${ADMIN_SERVER}
        username: ${ADMIN_SECURITY_NAME}
        password: ${ADMIN_SECURITY_PASSWORD}

        instance:
          management-base-url: https://blog-microservice-post.herokuapp.com/
          service-base-url: ${spring.boot.admin.client.instance.management-base-url}
          auto-deregistration: true
          period: 5m
  redis:
    configuration:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
    channels:
      channel-tag-add: ${REDIS_CHANNEL_TAG_ADD}
      channel-tag-remove: ${REDIS_CHANNEL_TAG_REMOVE}

  profiles:
    active: "dev"
  application:
    name: blog-microservice-tag
  data:
    mongodb:
      uri: ${MONGODB_URI}
      databaseName: ${MONGODB_DBNAME}
springdoc:
  version: '@springdoc.version@'

discovery:
  uri: https://jjara-discovery.herokuapp.com/v1/discovery/

---
spring:
  cors:
    allowed-origin: 'http://localhost:3000'
  config:
    activate:
      on-profile: "dev"
---
spring:
  cors:
    allowed-origin: >
      https://jonathanjaramorales.herokuapp.com,
      https://blog-eureka-server.herokuapp.com,
      http://jonathanjaramorales.herokuapp.com,
      http://blog-eureka-server.herokuapp.com

  config:
    activate:
      on-profile: "prod"